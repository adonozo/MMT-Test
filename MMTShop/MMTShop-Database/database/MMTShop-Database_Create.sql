/*
Deployment script for MMTShop-Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MMTShop-Database"
:setvar DefaultFilePrefix "MMTShop-Database"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[products]...';


GO
CREATE TABLE [dbo].[products] (
    [Id]          INT             IDENTITY (1, 1) NOT NULL,
    [CategoryId]  INT             NOT NULL,
    [Sku]         NVARCHAR (250)  NOT NULL,
    [Name]        NVARCHAR (250)  NOT NULL,
    [Description] TEXT            NOT NULL,
    [Price]       DECIMAL (10, 4) NOT NULL,
    [IsFeatured]  BIT             NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[categories]...';


GO
CREATE TABLE [dbo].[categories] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [Name]             NVARCHAR (250) NOT NULL,
    [SkuProductFilter] NVARCHAR (250) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_products_categories]...';


GO
ALTER TABLE [dbo].[products]
    ADD CONSTRAINT [FK_products_categories] FOREIGN KEY ([CategoryId]) REFERENCES [dbo].[categories] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[GetCategories]...';


GO
CREATE PROCEDURE [dbo].[GetCategories]
AS
BEGIN
	SELECT * FROM [dbo].[categories]
END
GO
PRINT N'Creating Procedure [dbo].[GetFeaturedProducts]...';


GO
CREATE PROCEDURE [dbo].[GetFeaturedProducts]
AS
BEGIN
	SELECT * FROM [dbo].[products] WHERE [IsFeatured] = 1;
END
GO
PRINT N'Creating Procedure [dbo].[GetProductByCategory]...';


GO
CREATE PROCEDURE [dbo].[GetProductByCategory]
	@categoryId int
AS
BEGIN
	SELECT * FROM [dbo].[products] WHERE [products].[CategoryId] = @categoryId
END
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '96d7c309-365a-40ec-9ed1-6c1e7c5cb55f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('96d7c309-365a-40ec-9ed1-6c1e7c5cb55f')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

SET IDENTITY_INSERT [dbo].[categories] ON;
GO

IF NOT EXISTS (SELECT * FROM [dbo].[categories] WHERE [Id] = 1)
    INSERT INTO [dbo].[categories] ([Id],[Name],[SkuProductFilter]) 
    VALUES (1, 'Home', '1%')

IF NOT EXISTS (SELECT * FROM [dbo].[categories] WHERE [Id] = 2)
    INSERT INTO [dbo].[categories] ([Id],[Name],[SkuProductFilter])
    VALUES (2, 'Garden', '2%')

IF NOT EXISTS (SELECT * FROM [dbo].[categories] WHERE [Id] = 3)
    INSERT INTO [dbo].[categories] ([Id],[Name],[SkuProductFilter])
    VALUES (3, 'Electronics', '3%')

IF NOT EXISTS (SELECT * FROM [dbo].[categories] WHERE [Id] = 4)
    INSERT INTO [dbo].[categories] ([Id],[Name],[SkuProductFilter])
    VALUES (4, 'Fitness', '4%')

IF NOT EXISTS (SELECT * FROM [dbo].[categories] WHERE [Id] = 5)
    INSERT INTO [dbo].[categories] ([Id],[Name],[SkuProductFilter])
    VALUES (5, 'Toys', '5%')

SET IDENTITY_INSERT [dbo].[categories] OFF;
GO

SET IDENTITY_INSERT [dbo].[products] ON;
GO

IF NOT EXISTS (SELECT * FROM [dbo].[products] WHERE [Id] = 1)
    INSERT INTO [dbo].[products] ([Id],[CategoryId],[Sku],[Name],[Description],[Price],[IsFeatured])
    VALUES (1, 1, '18392', 'Desk Home Office', 'Finished in stylish black for a modern twist', (56.99), 1)

IF NOT EXISTS (SELECT * FROM [dbo].[products] WHERE [Id] = 2)
    INSERT INTO [dbo].[products] ([Id],[CategoryId],[Sku],[Name],[Description],[Price],[IsFeatured])
    VALUES (2, 1, '14823', 'Ergonomic Desk Chair', 'Comfort, function and good looks in one chair', (82.40), 1)

IF NOT EXISTS (SELECT * FROM [dbo].[products] WHERE [Id] = 3)
    INSERT INTO [dbo].[products] ([Id],[CategoryId],[Sku],[Name],[Description],[Price],[IsFeatured])
    VALUES (3, 2, '29470', 'Picnic Table', 'Features a 42 in. x 24 in. table top (almond) with two independent benches (almond) and a folding frame (bronze)', (74.99), 1)

IF NOT EXISTS (SELECT * FROM [dbo].[products] WHERE [Id] = 4)
    INSERT INTO [dbo].[products] ([Id],[CategoryId],[Sku],[Name],[Description],[Price],[IsFeatured])
    VALUES (4, 3, '38847', 'Over Ear Wireless Headphones', 'hanks to the over-ear design, you can block out all the sounds in the house and enjoy your very own viewing of the best blockbusters.', (45.00), 1)

IF NOT EXISTS (SELECT * FROM [dbo].[products] WHERE [Id] = 5)
    INSERT INTO [dbo].[products] ([Id],[CategoryId],[Sku],[Name],[Description],[Price],[IsFeatured])
    VALUES (5, 3, '38561', 'Smart 4K LED TV', 'Crystal display for long-lasting colour & sharp contrast', (480.00), 1)

IF NOT EXISTS (SELECT * FROM [dbo].[products] WHERE [Id] = 6)
    INSERT INTO [dbo].[products] ([Id],[CategoryId],[Sku],[Name],[Description],[Price],[IsFeatured])
    VALUES (6, 4, '40136', 'Yoga Exercise Mat', '10mm thick, the training mat has full padding for extra comfort whilst you train. The cushioned mat reduces pressure on the joints whilst closed cell technology minimises moisture absorption', (29.99), 0)

IF NOT EXISTS (SELECT * FROM [dbo].[products] WHERE [Id] = 7)
    INSERT INTO [dbo].[products] ([Id],[CategoryId],[Sku],[Name],[Description],[Price],[IsFeatured])
    VALUES (7, 5, '59173', 'LEGO Scout Helmet', 'Fully assembled, the Scout Troopers helmet measures over 18cm high, 11cm long and 12cm wide', (33.99), 0)

SET IDENTITY_INSERT [dbo].[products] OFF;
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
